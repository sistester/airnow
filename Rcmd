#import data
airnow <- read_csv("airnow-data/airnow-20906.csv", col_types = cols(DateObserved = col_date(format = "%Y-%m-%d")))
colnames(airnow_20906) <- c("DateObserved","HourObserved","LocalTimeZone","ReportingArea","StateCode","Latitude","Longitude","ParameterName","AQI","CategoryNumber","CategoryName")

# process data and get mean, max, min, median and std
library(dplyr);
library(tidyr);
df <- airnow_20906 %>% separate(DateObserved, into=c("Year","Month", "Day"),sep="-")
df2 <- df %>%
group_by(Year,ParameterName) %>%
summarise(YMean=mean(AQI, na.rm=TRUE), YMax=max(AQI,  na.rm=TRUE), YMin=min(AQI,  na.rm=TRUE), YMedian=median(AQI,  na.rm=TRUE), YStd=sd(AQI,  na.rm=TRUE))
df2

#plot it
library(ggplot2)

#put dots only for mean
ggplot(data=df2, aes(x=Year, y=YMean, color=ParameterName)) + geom_line() + geom_point()

#put dots and connect them with lines for mean
ggplot(data=df2, aes(x=Year, y=YMean, color=ParameterName, group=ParameterName)) + geom_line() + geom_point()

#put dots and line for median, std, min and max
ggplot(data=df2, aes(x=Year, y=YMedian, color=ParameterName, group=ParameterName)) + geom_line() + geom_point()
ggplot(data=df2, aes(x=Year, y=YStd, color=ParameterName, group=ParameterName)) + geom_line() + geom_point()
ggplot(data=df2, aes(x=Year, y=YMin, color=ParameterName, group=ParameterName)) + geom_line() + geom_point()
ggplot(data=df2, aes(x=Year, y=YMax, color=ParameterName, group=ParameterName)) + geom_line() + geom_point()
df2
ggplot(data=df2, aes(x=Year, y=YMax, color=ParameterName, group=ParameterName)) + geom_line() + geom_point() + geom_abline()

#coefficiency
df_mod <- lm (YMax ~ Year, data=df2)
coef(df_mod)

library(modelr)
grid <- df2 %>% data_grid(YMin)
mod1 <- lm (YMean ~ Year + ParameterName, data = df2)
mod2 <- lm (YMean ~ Year * ParameterName, data = df2)
grid <- df2 %>% data_grid(Year, ParameterName) %>% gather_predictions(mod1, mod2)
grid

#plot the models, predictions
ggplot(df2, aes(Year, YMean, color=ParameterName)) + geom_point() + geom_line(data=grid, aes(y=pred)) + facet_wrap( ~ model)
ggplot(df2, aes(Year, YMean, color=ParameterName)) + geom_point() + geom_line(data=grid, aes(y=pred, group=ParameterName)) + facet_wrap( ~ model)


ggplot(df2, aes(x=as.Date(Year,format='%Y'), YMean, color=ParameterName)) + geom_point() + geom_line(data=grid, aes(x=as.Date(Year,format='%Y'),y=pred, group=ParameterName)) + facet_wrap( ~ model)
ggplot(df2, aes(x=as.Date(Year,format='%Y'), YMean, color=ParameterName)) + geom_point() + geom_line(data=grid, aes(x=as.Date(Year,format='%Y'),y=pred)) + facet_wrap( ~ model)


#Calculate bluebird data:
bluebird10_14 <- read_csv("airnow-data/bluebird10-14.csv")
bf2  <- bluebird10_14 %>%
     group_by(Year) %>%
     summarise(BSum=sum(Boxes,na.rm=TRUE),FSum=sum(Fledged,na.rm=TRUE))
bf2$avg <- bf2$FSum / bf2$BSum
ggplot(data=bf2, aes(x=Year, y=avg)) + geom_line() + geom_point()

library(readr)
cordata_pm <- read_csv("airnow-data/cordata-pm")
library("ggpubr")
#visualization
ggscatter(cordata_pm, x = "PM", y = "Bird", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",
          xlab = "Bird Fledged per Box", ylab = "PM2.5")
#Are the data from each of the 2 variables (x, y) follow a normal distribution?
#
#    Use Shapiro-Wilk normality test –> R function: shapiro.test()
#        and look at the normality plot —> R function: ggpubr::ggqqplot()
# Shapiro-Wilk normality test for bird
shapiro.test(cordata_pm$Bird) 
# data:  cordata_pm$Bird
# W = 0.78289, p-value = 0.05835
#
# # Shapiro-Wilk normality test for PM2.5
shapiro.test(cordata_pm$PM)
# data:  cordata_pm$Bird
# W = 0.78289, p-value = 0.05835
#
# Visual inspection of the data normality using Q-Q plots (quantile-quantile plots). Q-Q plot draws the correlation between a given sample and the normal distribution.
library("ggpubr")
ggqqplot(cordata_pm$Bird, ylab = "Bird")
ggqqplot(cordata_pm$PM, ylab = "PM")
#Pearson Correlation test
res <- cor.test(cordata_pm$Bird,cordata_pm$PM, method = "pearson")
res

#Kendall rank correlation test
res <- cor.test(cordata_pm$Bird,cordata_pm$PM, method = "kendall")
res

#Spearman rank correlation test
res <- cor.test(cordata_pm$Bird,cordata_pm$PM, method = "spearman")
res
